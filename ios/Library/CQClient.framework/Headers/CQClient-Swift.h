#if 0
#elif (defined(__arm64__) && __arm64__) || (defined(__x86_64__) && __x86_64__)
// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef CQCLIENT_SWIFT_H
#define CQCLIENT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CQClient",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class UIView;

SWIFT_CLASS("_TtC8CQClient21CQAgreementController")
@interface CQAgreementController : NSObject
+ (CQAgreementController * _Nullable)agreementControllerWithCompanyName:(NSString * _Nonnull)companyName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCompanyName:(NSString * _Nonnull)companyName OBJC_DESIGNATED_INITIALIZER;
- (void)setTitle:(NSString * _Nonnull)title;
- (void)setWithdrawalMessage:(NSString * _Nonnull)withdrawalMessage;
- (void)setAgreeButtonHandler:(void (^ _Nonnull)(CQAgreementController * _Nonnull))handler;
- (void)setCancelButtonHandler:(void (^ _Nonnull)(CQAgreementController * _Nonnull))handler;
- (void)presentWithParentView:(UIView * _Nullable)parentView;
- (void)dismissUI;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol CQClientDelegate;
enum CQClientResultCode : NSInteger;
enum CQClientCustomSetting : NSInteger;
@class UIApplication;
@class UIViewController;
@class UNUserNotificationCenter;
@class UNNotification;
@class UNNotificationResponse;

SWIFT_CLASS("_TtC8CQClient8CQClient")
@interface CQClient : NSObject
@property (nonatomic, weak) id <CQClientDelegate> _Nullable delegate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_BELOW_IOS8;)
+ (BOOL)IS_BELOW_IOS8 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS8_AND_ABOVE;)
+ (BOOL)IS_IOS8_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS9_AND_ABOVE;)
+ (BOOL)IS_IOS9_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS10_AND_ABOVE;)
+ (BOOL)IS_IOS10_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS11_AND_ABOVE;)
+ (BOOL)IS_IOS11_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS12_AND_ABOVE;)
+ (BOOL)IS_IOS12_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS13_AND_ABOVE;)
+ (BOOL)IS_IOS13_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Wrapper function for Objective-C backward compatibility.
/// \param mdn Userâ€™s phone number. Only number is allowed in string.
///
- (void)setMDN:(NSString * _Nonnull)mdn;
/// Wrapper function for Objective-C backward compatibility.
/// \param countryCode Userâ€™s country code. Only number is allowed in string.
///
/// \param mdn Userâ€™s phone number. Only number is allowed in string.
///
- (void)setCountryCode:(NSString * _Nonnull)countryCode mdn:(NSString * _Nonnull)mdn;
/// Wrapper function for Objective-C backward compatibility.
/// \param deviceToken Device token for APNS.
///
- (void)setDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
/// Enable specified custom setting for current app life cycle. Note that this setting will be applied until app is terminated.
/// \param customSetting one of enum value of CQClientCustomSetting
///
- (void)enableCustomSetting:(enum CQClientCustomSetting)customSetting;
/// Disable specified custom setting for current app life cycle. Note that this setting will be applied until app is terminated.
/// \param customSetting one of enum value of CQClientCustomSetting
///
- (void)disableCustomSetting:(enum CQClientCustomSetting)customSetting;
- (void)setCustomSetting:(NSDictionary<NSString *, NSNumber *> * _Nonnull)customSettingDictionary SWIFT_UNAVAILABLE_MSG("Use enableCustomSetting: and disableCustomSetting: instead.");
- (BOOL)isCQClientRemoteNotificationPayload:(NSDictionary * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCQClientSilentRemoteNotificationPayload:(NSDictionary * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application SWIFT_DEPRECATED;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application SWIFT_DEPRECATED;
- (void)initializeWithClientID:(NSString * _Nonnull)clientID configURL:(NSString * _Nonnull)configURL;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL remoteNotificationPayload:(NSDictionary * _Nullable)payload;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL remoteNotificationPayload:(NSDictionary * _Nullable)payload completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthCodeForMDN:(NSString * _Nonnull)mdn;
- (void)requestAuthCodeForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn;
- (void)requestAuthCodeForMDN:(NSString * _Nonnull)mdn completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthCodeForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthorizationForMDN:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode;
- (void)requestAuthorizationForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode;
- (void)requestAuthorizationForMDN:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthorizationForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestRegistrationForDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)requestRegistrationForDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload delayWebVoiceUI:(BOOL)delayWebVoiceUI;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload delayWebVoiceUI:(BOOL)delayWebVoiceUI completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated withCountryCode:(BOOL)withCountryCode;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated withCountryCode:(BOOL)withCountryCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentDelayedWebVoiceUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated;
- (void)presentDelayedWebVoiceUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)setCQClientID:(NSString * _Nullable)clientID;
- (void)setConfigURL:(NSString * _Nullable)configURL;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nullable)(enum CQClientResultCode))completion;
- (BOOL)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_AVAILABILITY(ios,introduced=10);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_AVAILABILITY(ios,introduced=10);
@property (nonatomic, readonly) UNNotificationPresentationOptions notificationPresentationOption SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)updateAgreementInfoWithAgreeState:(BOOL)agreeState appName:(NSString * _Nonnull)appName completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
@end

typedef SWIFT_ENUM(NSInteger, CQClientActionType, closed) {
  CQClientActionTypeAuthCode = 1,
  CQClientActionTypeAuthorization = 2,
  CQClientActionTypeInitialize = 3,
  CQClientActionTypeRegistration = 4,
  CQClientActionTypeService = 5,
  CQClientActionTypeAck = 6,
  CQClientActionTypeAuthUI = 7,
  CQClientActionTypeWebVoiceUI = 8,
  CQClientActionTypeApplicationDidFinishLaunchingWithOptions = 9,
  CQClientActionTypeApplicationDidRegisterForRemoteNotificationsWithDeviceToken = 10,
  CQClientActionTypeApplicationDidReceiveRemoteNotification = 11,
  CQClientActionTypeApplicationDidReceiveRemoteNotificationFetchCompletionHandler = 12,
  CQClientActionTypeUserNotificationCenterWillPresentWithCompletionHandler = 13,
  CQClientActionTypeUserNotificationCenterDidReceiveWithCompletionHandler = 14,
};


SWIFT_CLASS("_TtC8CQClient19CQClientAppDelegate")
@interface CQClientAppDelegate : UIResponder <UIApplicationDelegate, UNUserNotificationCenterDelegate>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler SWIFT_AVAILABILITY(ios,introduced=10);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_AVAILABILITY(ios,introduced=10);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, CQClientCustomSetting, closed) {
  CQClientCustomSettingDoNotRequestDeviceToken = 0,
  CQClientCustomSettingSearchActiveWindow = 1,
  CQClientCustomSettingAddSubviewInsteadOfPresent = 2,
  CQClientCustomSettingSecureTextEntryForAuthCode = 3,
  CQClientCustomSettingSecureTextEntryForAuthorization = 4,
  CQClientCustomSettingDelayWebVoiceUI = 5,
};


SWIFT_PROTOCOL("_TtP8CQClient16CQClientDelegate_")
@protocol CQClientDelegate <NSObject>
@optional
- (void)cqclient:(CQClient * _Nullable)client didFinish:(enum CQClientActionType)actionType resultCode:(enum CQClientResultCode)resultCode;
- (void)cqclientDidPresentWebVoiceUI;
- (void)cqclientDidDismissWebVoiceUI;
- (void)cqclientDidFinishAuthUIWith:(enum CQClientResultCode)resultCode;
@end

typedef SWIFT_ENUM(NSInteger, CQClientResultCode, closed) {
  CQClientResultCodeSuccess = 0,
  CQClientResultCodeErrorParameter = 1000,
  CQClientResultCodeErrorParameterMissingCQClientID = 1001,
  CQClientResultCodeErrorParameterMissingCQClientVersion = 1002,
  CQClientResultCodeErrorParameterMissingConfigurationURL = 1003,
  CQClientResultCodeErrorParameterMissingCountryCode = 1004,
  CQClientResultCodeErrorParameterMissingMDN = 1005,
  CQClientResultCodeErrorParameterMissingDeviceToken = 1006,
  CQClientResultCodeErrorParameterMissingAuthCode = 1007,
  CQClientResultCodeErrorParameterMissingCalleeMDN = 1008,
  CQClientResultCodeErrorParameterMissingMentCode = 1009,
  CQClientResultCodeErrorParameterSameDeviceToken = 1010,
  CQClientResultCodeErrorParameterInvaildPayload = 1011,
  CQClientResultCodeErrorParameterRejected = 1012,
  CQClientResultCodeErrorConfig = 2000,
  CQClientResultCodeErrorConfigDownloadFailed = 2001,
  CQClientResultCodeErrorConfigSaveFailed = 2002,
  CQClientResultCodeErrorConfigInvalidData = 2003,
  CQClientResultCodeErrorNetwork = 3000,
  CQClientResultCodeErrorNetworkFailure = 3001,
  CQClientResultCodeErrorData = 4000,
  CQClientResultCodeErrorDataAuthCodeGenerationFailed = 4001,
  CQClientResultCodeErrorDataAuthCodeInsertFailed = 4002,
  CQClientResultCodeErrorDataAuthCodeNotFound = 4003,
  CQClientResultCodeErrorDataAuthCodeNotMatched = 4004,
  CQClientResultCodeErrorDataAuthCodeExpired = 4005,
  CQClientResultCodeErrorDataInvalidCQClientID = 4006,
  CQClientResultCodeErrorDataInvalidUserInfo = 4007,
  CQClientResultCodeErrorDataServiceMDNNotMatched = 4008,
  CQClientResultCodeErrorDataServiceInvalidServiceData = 4009,
  CQClientResultCodeErrorDataServiceFailure = 4010,
  CQClientResultCodeErrorDataRegistrationFailed = 4011,
  CQClientResultCodeErrorDataAckFailed = 4012,
  CQClientResultCodeErrorDataServiceFailed = 4013,
  CQClientResultCodeErrorDataFeedbackFailed = 4014,
  CQClientResultCodeErrorDataSVCAgreeFailed = 4015,
  CQClientResultCodeErrorService = 5000,
  CQClientResultCodeErrorWebVoiceInProgress = 5001,
  CQClientResultCodeErrorWebVoiceNothingToPresent = 5002,
  CQClientResultCodeAuthUI = 6000,
  CQClientResultCodeAuthUIDismissedSuccess = 6001,
  CQClientResultCodeAuthUIDismissedCancel = 6002,
  CQClientResultCodeAuthUINotificationFailed = 6003,
  CQClientResultCodeAuthUIRegistrationSuccess = 6004,
  CQClientResultCodeAuthUIRegistrationFailed = 6005,
  CQClientResultCodeErrorGeneral = 8000,
  CQClientResultCodeErrorGeneralFailure = 8001,
  CQClientResultCodeErrorGeneralAPIConstructionFailed = 8002,
  CQClientResultCodeNone = 9999,
};






#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif (defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__) || (defined(__i386__) && __i386__)
// Generated by Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
#ifndef CQCLIENT_SWIFT_H
#define CQCLIENT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CQClient",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@class UIView;

SWIFT_CLASS("_TtC8CQClient21CQAgreementController")
@interface CQAgreementController : NSObject
+ (CQAgreementController * _Nullable)agreementControllerWithCompanyName:(NSString * _Nonnull)companyName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCompanyName:(NSString * _Nonnull)companyName OBJC_DESIGNATED_INITIALIZER;
- (void)setTitle:(NSString * _Nonnull)title;
- (void)setWithdrawalMessage:(NSString * _Nonnull)withdrawalMessage;
- (void)setAgreeButtonHandler:(void (^ _Nonnull)(CQAgreementController * _Nonnull))handler;
- (void)setCancelButtonHandler:(void (^ _Nonnull)(CQAgreementController * _Nonnull))handler;
- (void)presentWithParentView:(UIView * _Nullable)parentView;
- (void)dismissUI;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol CQClientDelegate;
enum CQClientResultCode : NSInteger;
enum CQClientCustomSetting : NSInteger;
@class UIApplication;
@class UIViewController;
@class UNUserNotificationCenter;
@class UNNotification;
@class UNNotificationResponse;

SWIFT_CLASS("_TtC8CQClient8CQClient")
@interface CQClient : NSObject
@property (nonatomic, weak) id <CQClientDelegate> _Nullable delegate;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_BELOW_IOS8;)
+ (BOOL)IS_BELOW_IOS8 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS8_AND_ABOVE;)
+ (BOOL)IS_IOS8_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS9_AND_ABOVE;)
+ (BOOL)IS_IOS9_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS10_AND_ABOVE;)
+ (BOOL)IS_IOS10_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS11_AND_ABOVE;)
+ (BOOL)IS_IOS11_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS12_AND_ABOVE;)
+ (BOOL)IS_IOS12_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL IS_IOS13_AND_ABOVE;)
+ (BOOL)IS_IOS13_AND_ABOVE SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Wrapper function for Objective-C backward compatibility.
/// \param mdn Userâ€™s phone number. Only number is allowed in string.
///
- (void)setMDN:(NSString * _Nonnull)mdn;
/// Wrapper function for Objective-C backward compatibility.
/// \param countryCode Userâ€™s country code. Only number is allowed in string.
///
/// \param mdn Userâ€™s phone number. Only number is allowed in string.
///
- (void)setCountryCode:(NSString * _Nonnull)countryCode mdn:(NSString * _Nonnull)mdn;
/// Wrapper function for Objective-C backward compatibility.
/// \param deviceToken Device token for APNS.
///
- (void)setDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
/// Enable specified custom setting for current app life cycle. Note that this setting will be applied until app is terminated.
/// \param customSetting one of enum value of CQClientCustomSetting
///
- (void)enableCustomSetting:(enum CQClientCustomSetting)customSetting;
/// Disable specified custom setting for current app life cycle. Note that this setting will be applied until app is terminated.
/// \param customSetting one of enum value of CQClientCustomSetting
///
- (void)disableCustomSetting:(enum CQClientCustomSetting)customSetting;
- (void)setCustomSetting:(NSDictionary<NSString *, NSNumber *> * _Nonnull)customSettingDictionary SWIFT_UNAVAILABLE_MSG("Use enableCustomSetting: and disableCustomSetting: instead.");
- (BOOL)isCQClientRemoteNotificationPayload:(NSDictionary * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCQClientSilentRemoteNotificationPayload:(NSDictionary * _Nullable)payload SWIFT_WARN_UNUSED_RESULT;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application SWIFT_DEPRECATED;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application SWIFT_DEPRECATED;
- (void)initializeWithClientID:(NSString * _Nonnull)clientID configURL:(NSString * _Nonnull)configURL;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL remoteNotificationPayload:(NSDictionary * _Nullable)payload;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)initializeWithClientID:(NSString * _Nullable)clientID configURL:(NSString * _Nullable)configURL remoteNotificationPayload:(NSDictionary * _Nullable)payload completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthCodeForMDN:(NSString * _Nonnull)mdn;
- (void)requestAuthCodeForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn;
- (void)requestAuthCodeForMDN:(NSString * _Nonnull)mdn completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthCodeForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthorizationForMDN:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode;
- (void)requestAuthorizationForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode;
- (void)requestAuthorizationForMDN:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestAuthorizationForCountryCode:(NSString * _Nullable)countryCode mdn:(NSString * _Nonnull)mdn authCode:(NSString * _Nonnull)authCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestRegistrationForDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)requestRegistrationForDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload delayWebVoiceUI:(BOOL)delayWebVoiceUI;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)requestServiceForRemoteNotificationPayload:(NSDictionary * _Nonnull)remoteNotificationPayload delayWebVoiceUI:(BOOL)delayWebVoiceUI completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated withCountryCode:(BOOL)withCountryCode;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentAuthUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated withCountryCode:(BOOL)withCountryCode completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)presentDelayedWebVoiceUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated;
- (void)presentDelayedWebVoiceUIInViewController:(UIViewController * _Nullable)parentViewController animated:(BOOL)animated completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
- (void)setCQClientID:(NSString * _Nullable)clientID;
- (void)setConfigURL:(NSString * _Nullable)configURL;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken completion:(void (^ _Nullable)(enum CQClientResultCode))completion;
- (BOOL)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_AVAILABILITY(ios,introduced=10);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler completion:(void (^ _Nullable)(enum CQClientResultCode))completion SWIFT_AVAILABILITY(ios,introduced=10);
@property (nonatomic, readonly) UNNotificationPresentationOptions notificationPresentationOption SWIFT_AVAILABILITY(ios,introduced=10.0);
- (void)updateAgreementInfoWithAgreeState:(BOOL)agreeState appName:(NSString * _Nonnull)appName completion:(void (^ _Nonnull)(enum CQClientResultCode))completion;
@end

typedef SWIFT_ENUM(NSInteger, CQClientActionType, closed) {
  CQClientActionTypeAuthCode = 1,
  CQClientActionTypeAuthorization = 2,
  CQClientActionTypeInitialize = 3,
  CQClientActionTypeRegistration = 4,
  CQClientActionTypeService = 5,
  CQClientActionTypeAck = 6,
  CQClientActionTypeAuthUI = 7,
  CQClientActionTypeWebVoiceUI = 8,
  CQClientActionTypeApplicationDidFinishLaunchingWithOptions = 9,
  CQClientActionTypeApplicationDidRegisterForRemoteNotificationsWithDeviceToken = 10,
  CQClientActionTypeApplicationDidReceiveRemoteNotification = 11,
  CQClientActionTypeApplicationDidReceiveRemoteNotificationFetchCompletionHandler = 12,
  CQClientActionTypeUserNotificationCenterWillPresentWithCompletionHandler = 13,
  CQClientActionTypeUserNotificationCenterDidReceiveWithCompletionHandler = 14,
};


SWIFT_CLASS("_TtC8CQClient19CQClientAppDelegate")
@interface CQClientAppDelegate : UIResponder <UIApplicationDelegate, UNUserNotificationCenterDelegate>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler SWIFT_AVAILABILITY(ios,introduced=10);
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler SWIFT_AVAILABILITY(ios,introduced=10);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, CQClientCustomSetting, closed) {
  CQClientCustomSettingDoNotRequestDeviceToken = 0,
  CQClientCustomSettingSearchActiveWindow = 1,
  CQClientCustomSettingAddSubviewInsteadOfPresent = 2,
  CQClientCustomSettingSecureTextEntryForAuthCode = 3,
  CQClientCustomSettingSecureTextEntryForAuthorization = 4,
  CQClientCustomSettingDelayWebVoiceUI = 5,
};


SWIFT_PROTOCOL("_TtP8CQClient16CQClientDelegate_")
@protocol CQClientDelegate <NSObject>
@optional
- (void)cqclient:(CQClient * _Nullable)client didFinish:(enum CQClientActionType)actionType resultCode:(enum CQClientResultCode)resultCode;
- (void)cqclientDidPresentWebVoiceUI;
- (void)cqclientDidDismissWebVoiceUI;
- (void)cqclientDidFinishAuthUIWith:(enum CQClientResultCode)resultCode;
@end

typedef SWIFT_ENUM(NSInteger, CQClientResultCode, closed) {
  CQClientResultCodeSuccess = 0,
  CQClientResultCodeErrorParameter = 1000,
  CQClientResultCodeErrorParameterMissingCQClientID = 1001,
  CQClientResultCodeErrorParameterMissingCQClientVersion = 1002,
  CQClientResultCodeErrorParameterMissingConfigurationURL = 1003,
  CQClientResultCodeErrorParameterMissingCountryCode = 1004,
  CQClientResultCodeErrorParameterMissingMDN = 1005,
  CQClientResultCodeErrorParameterMissingDeviceToken = 1006,
  CQClientResultCodeErrorParameterMissingAuthCode = 1007,
  CQClientResultCodeErrorParameterMissingCalleeMDN = 1008,
  CQClientResultCodeErrorParameterMissingMentCode = 1009,
  CQClientResultCodeErrorParameterSameDeviceToken = 1010,
  CQClientResultCodeErrorParameterInvaildPayload = 1011,
  CQClientResultCodeErrorParameterRejected = 1012,
  CQClientResultCodeErrorConfig = 2000,
  CQClientResultCodeErrorConfigDownloadFailed = 2001,
  CQClientResultCodeErrorConfigSaveFailed = 2002,
  CQClientResultCodeErrorConfigInvalidData = 2003,
  CQClientResultCodeErrorNetwork = 3000,
  CQClientResultCodeErrorNetworkFailure = 3001,
  CQClientResultCodeErrorData = 4000,
  CQClientResultCodeErrorDataAuthCodeGenerationFailed = 4001,
  CQClientResultCodeErrorDataAuthCodeInsertFailed = 4002,
  CQClientResultCodeErrorDataAuthCodeNotFound = 4003,
  CQClientResultCodeErrorDataAuthCodeNotMatched = 4004,
  CQClientResultCodeErrorDataAuthCodeExpired = 4005,
  CQClientResultCodeErrorDataInvalidCQClientID = 4006,
  CQClientResultCodeErrorDataInvalidUserInfo = 4007,
  CQClientResultCodeErrorDataServiceMDNNotMatched = 4008,
  CQClientResultCodeErrorDataServiceInvalidServiceData = 4009,
  CQClientResultCodeErrorDataServiceFailure = 4010,
  CQClientResultCodeErrorDataRegistrationFailed = 4011,
  CQClientResultCodeErrorDataAckFailed = 4012,
  CQClientResultCodeErrorDataServiceFailed = 4013,
  CQClientResultCodeErrorDataFeedbackFailed = 4014,
  CQClientResultCodeErrorDataSVCAgreeFailed = 4015,
  CQClientResultCodeErrorService = 5000,
  CQClientResultCodeErrorWebVoiceInProgress = 5001,
  CQClientResultCodeErrorWebVoiceNothingToPresent = 5002,
  CQClientResultCodeAuthUI = 6000,
  CQClientResultCodeAuthUIDismissedSuccess = 6001,
  CQClientResultCodeAuthUIDismissedCancel = 6002,
  CQClientResultCodeAuthUINotificationFailed = 6003,
  CQClientResultCodeAuthUIRegistrationSuccess = 6004,
  CQClientResultCodeAuthUIRegistrationFailed = 6005,
  CQClientResultCodeErrorGeneral = 8000,
  CQClientResultCodeErrorGeneralFailure = 8001,
  CQClientResultCodeErrorGeneralAPIConstructionFailed = 8002,
  CQClientResultCodeNone = 9999,
};






#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
